@page
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}

<div class="container" style="
    width: 100vw;
    display: flex;
    flex-direction: row;">

    <div class="menu" style="padding:100px">
        <h1>Menu</h1>

        @if (Model.menuCategory.Contains("Combo"))
        {
            <h2 class="menuCategory" style="text-decoration:underline">Combos</h2>
            @foreach (@DinoDiner.Menu.IMenuItem item in @Model.FilterSearch(Model.Search).OfType<DinoDiner.Menu.CretaceousCombo>())
            {
                <div class="menu-item">
                    <h3>@item.ToString()</h3>

                    <table style="width:100%;border:solid">
                        <tr>
                            <th>Size</th>
                            <th>Price</th>
                            <th>Calories</th>
                        </tr>
                        <tr>
                            <td>Small</td>
                            <td>@item.Price</td>
                            <td>@item.Calories</td>
                        </tr>
                        <tr>
                            <td>Medium</td>
                            @{
                                DinoDiner.Menu.CretaceousCombo sizedItem = item as DinoDiner.Menu.CretaceousCombo;
                                sizedItem.Size = DinoDiner.Menu.Size.Medium;
                            }
                            <td>@sizedItem.Price</td>
                            <td>@sizedItem.Calories</td>
                        </tr>
                        <tr>
                            @{
                                sizedItem.Size = DinoDiner.Menu.Size.Large;
                            }
                            <td>Large</td>
                            <td>@sizedItem.Price</td>
                            <td>@sizedItem.Calories</td>
                        </tr>
                    </table>

                    <h4>Ingredients:</h4>
                    <div>
                        @foreach (string s in item.Ingredients)
                        {
                            <div class="ingredient">- @s</div>
                        }
                    </div>
                </div>
            }
        }

        @if (Model.menuCategory.Contains("Entree"))
        {
            <h2 class="menuCategory" style="text-decoration:underline">Entrees</h2>
            @foreach (@DinoDiner.Menu.IMenuItem item in @Model.FilterSearch(Model.Search).OfType<DinoDiner.Menu.Entree>())
            {
                <div class="menu-item">
                    <h3>@item.ToString()</h3>

                    <table style="width:100%;border:solid">
                        <tr>
                            <th>Price</th>
                            <th>Calories</th>
                        </tr>
                        <tr>
                            <td>@item.Price</td>
                            <td>@item.Calories</td>
                        </tr>
                    </table>

                    <h4>Ingredients:</h4>
                    <div>
                        @foreach (string s in item.Ingredients)
                        {
                            <div class="ingredient">- @s</div>
                        }
                    </div>
                </div>
            }
        }

        @if (Model.menuCategory.Contains("Side"))
        {
            <h2 class="menuCategory" style="text-decoration:underline">Sides</h2>
            @foreach (@DinoDiner.Menu.IMenuItem item in @Model.FilterSearch(Model.Search).OfType<DinoDiner.Menu.Side>())
            {
                <div class="menu-item">
                    <h3>@item.ToString()</h3>
                    <div>
                        <table style="width:100%;border:solid">
                            <tr>
                                <th>Size</th>
                                <th>Price</th>
                                <th>Calories</th>
                            </tr>
                            <tr>
                                <td>Small</td>
                                <td>@item.Price</td>
                                <td>@item.Calories</td>
                            </tr>
                            <tr>
                                <td>Medium</td>
                                @{
                                    DinoDiner.Menu.Side sizedItem = item as DinoDiner.Menu.Side;
                                    sizedItem.Size = DinoDiner.Menu.Size.Medium;
                                }
                                <td>@sizedItem.Price</td>
                                <td>@sizedItem.Calories</td>
                            </tr>
                            <tr>
                                @{
                                    sizedItem.Size = DinoDiner.Menu.Size.Large;
                                }
                                <td>Large</td>
                                <td>@sizedItem.Price</td>
                                <td>@sizedItem.Calories</td>
                            </tr>
                        </table>
                    </div>
                    <h4>Ingredients:</h4>
                    <div>
                        @foreach (string s in item.Ingredients)
                        {
                            <div class="ingredient">- @s</div>
                        }
                    </div>
                </div>
            }
        }

        @if (Model.menuCategory.Contains("Drink"))
        {
            <h2 class="menuCategory" style="text-decoration:underline">Drinks</h2>
            @foreach (@DinoDiner.Menu.IMenuItem item in @Model.FilterSearch(Model.Search).OfType<DinoDiner.Menu.Drink>())
            {
                <div class="menu-item">
                    <h3>@item.ToString()</h3>
                    <table style="width:100%;border:solid">
                        <tr>
                            <th>Size</th>
                            <th>Price</th>
                            <th>Calories</th>
                        </tr>
                        <tr>
                            <td>Small</td>
                            <td>@item.Price</td>
                            <td>@item.Calories</td>
                        </tr>
                        <tr>
                            <td>Medium</td>
                            @{
                                DinoDiner.Menu.Drink sizedItem = item as DinoDiner.Menu.Drink;
                                sizedItem.Size = DinoDiner.Menu.Size.Medium;
                            }
                            <td>@sizedItem.Price</td>
                            <td>@sizedItem.Calories</td>
                        </tr>
                        <tr>
                            @{
                                sizedItem.Size = DinoDiner.Menu.Size.Large;
                            }
                            <td>Large</td>
                            <td>@sizedItem.Price</td>
                            <td>@sizedItem.Calories</td>
                        </tr>
                    </table>
                    <h4>Ingredients:</h4>
                    <div>
                        @foreach (string s in item.Ingredients)
                        {
                            <div class="ingredient">- @s</div>
                        }
                    </div>
                </div>
            }
        }

    </div>


    <form method="post" style="
    display: flex;
    flex-direction: column;
    padding: 100px;
    border: solid;
    max-height: 1000px;
    border-color: black;
    min-width:200px;">

        <h1>Search</h1>
        <input type="text" name="search" id="search" value="@Model.Search" />
        <input type="submit" name="filter" id="filter" value="Search and Filter" />

        <h4>Menu Category</h4>
        <label>
            <input class="menu-filter" type="checkbox" value="Combo" name="menuCategory" checked="@Model.menuCategory.Contains("Combo")" />
            Combo
        </label>
        <label>
            <input class="menu-filter" type="checkbox" value="Entree" name="menuCategory" checked="@Model.menuCategory.Contains("Entree")" />
            Entree
        </label>
        <label>
            <input class="menu-filter" type="checkbox" value="Side" name="menuCategory" checked="@Model.menuCategory.Contains("Side")" />
            Side
        </label>
        <label>
            <input class="menu-filter" type="checkbox" value="Drink" name="menuCategory" checked="@Model.menuCategory.Contains("Drink")" />
            Drink
        </label>

        <h4>Price</h4>
        <label>
            Min:
            <input type="number" min="0" max="100" step="0.25" name="minimumPrice" id="minimum-price" value="@Model.minimumPrice" />
            Max:
            <input type="number" min="0" max="100" step="0.25" id="maximum-price" name="maximumPrice" value="@Model.maximumPrice" />
        </label>

        <h4>Exclude Ingredients:</h4>
        @foreach (string ingredient in @Model.Menu.PossibleIngredients)
        {
            <label>
                <input class="exclude-ingredient" type="checkbox" value="@ingredient" name="excludedIngredients" checked="@Model.excludedIngredients.Contains(ingredient)" />
                @ingredient
            </label>
        }


    </form>
</div>
